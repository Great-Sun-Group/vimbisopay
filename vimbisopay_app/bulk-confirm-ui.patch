From d185eb34709a9d5bd18a914184eb315eb1e53385 Mon Sep 17 00:00:00 2001
From: collen <collen.ndlovu@transactcampus.com>
Date: Tue, 17 Dec 2024 21:30:57 +0000
Subject: [PATCH] transaction conrimation

---
 .../presentation/blocs/home/home_bloc.dart    |  54 ++++++-
 .../presentation/blocs/home/home_event.dart   |  13 ++
 .../presentation/blocs/home/home_state.dart   |   7 +
 .../widgets/transactions_list.dart            | 134 ++++++++++++------
 4 files changed, 162 insertions(+), 46 deletions(-)

diff --git a/vimbisopay_app/lib/presentation/blocs/home/home_bloc.dart b/vimbisopay_app/lib/presentation/blocs/home/home_bloc.dart
index 70bd983..c342fc5 100644
--- a/vimbisopay_app/lib/presentation/blocs/home/home_bloc.dart
+++ b/vimbisopay_app/lib/presentation/blocs/home/home_bloc.dart
@@ -1,9 +1,14 @@
 import 'package:flutter_bloc/flutter_bloc.dart';
+import 'package:vimbisopay_app/application/usecases/accept_credex_bulk.dart';
 import 'package:vimbisopay_app/presentation/blocs/home/home_event.dart';
 import 'package:vimbisopay_app/presentation/blocs/home/home_state.dart';
 
 class HomeBloc extends Bloc<HomeEvent, HomeState> {
-  HomeBloc() : super(const HomeState()) {
+  final AcceptCredexBulk acceptCredexBulk;
+
+  HomeBloc({
+    required this.acceptCredexBulk,
+  }) : super(const HomeState()) {
     on<HomePageChanged>(_onPageChanged);
     on<HomeDataLoaded>(_onDataLoaded);
     on<HomeLedgerLoaded>(_onLedgerLoaded);
@@ -11,6 +16,8 @@ class HomeBloc extends Bloc<HomeEvent, HomeState> {
     on<HomeLoadStarted>(_onLoadStarted);
     on<HomeRefreshStarted>(_onRefreshStarted);
     on<HomeLoadMoreStarted>(_onLoadMoreStarted);
+    on<HomeAcceptCredexBulkStarted>(_onAcceptCredexBulkStarted);
+    on<HomeAcceptCredexBulkCompleted>(_onAcceptCredexBulkCompleted);
   }
 
   void _onPageChanged(
@@ -88,4 +95,49 @@ class HomeBloc extends Bloc<HomeEvent, HomeState> {
       error: event.message,
     ));
   }
+
+  Future<void> _onAcceptCredexBulkStarted(
+    HomeAcceptCredexBulkStarted event,
+    Emitter<HomeState> emit,
+  ) async {
+    emit(state.copyWith(
+      status: HomeStatus.acceptingCredex,
+      processingCredexIds: event.credexIds,
+      error: null,
+    ));
+
+    final result = await acceptCredexBulk(event.credexIds);
+
+    result.fold(
+      (failure) => add(HomeErrorOccurred(failure.message)),
+      (_) {
+        // Remove accepted transactions from pending lists
+        final updatedPendingIn = state.pendingInTransactions
+            .where((tx) => !event.credexIds.contains(tx.credexID))
+            .toList();
+        final updatedPendingOut = state.pendingOutTransactions
+            .where((tx) => !event.credexIds.contains(tx.credexID))
+            .toList();
+
+        add(HomeDataLoaded(
+          dashboard: state.dashboard!,
+          user: state.user!,
+          pendingInTransactions: updatedPendingIn,
+          pendingOutTransactions: updatedPendingOut,
+        ));
+        add(const HomeAcceptCredexBulkCompleted());
+      },
+    );
+  }
+
+  void _onAcceptCredexBulkCompleted(
+    HomeAcceptCredexBulkCompleted event,
+    Emitter<HomeState> emit,
+  ) {
+    emit(state.copyWith(
+      status: HomeStatus.success,
+      processingCredexIds: const [],
+      error: null,
+    ));
+  }
 }
diff --git a/vimbisopay_app/lib/presentation/blocs/home/home_event.dart b/vimbisopay_app/lib/presentation/blocs/home/home_event.dart
index 368d2a0..869b6a9 100644
--- a/vimbisopay_app/lib/presentation/blocs/home/home_event.dart
+++ b/vimbisopay_app/lib/presentation/blocs/home/home_event.dart
@@ -77,3 +77,16 @@ class HomeErrorOccurred extends HomeEvent {
   @override
   List<Object?> get props => [message];
 }
+
+class HomeAcceptCredexBulkStarted extends HomeEvent {
+  final List<String> credexIds;
+
+  const HomeAcceptCredexBulkStarted(this.credexIds);
+
+  @override
+  List<Object> get props => [credexIds];
+}
+
+class HomeAcceptCredexBulkCompleted extends HomeEvent {
+  const HomeAcceptCredexBulkCompleted();
+}
diff --git a/vimbisopay_app/lib/presentation/blocs/home/home_state.dart b/vimbisopay_app/lib/presentation/blocs/home/home_state.dart
index 82b5d01..8b35d82 100644
--- a/vimbisopay_app/lib/presentation/blocs/home/home_state.dart
+++ b/vimbisopay_app/lib/presentation/blocs/home/home_state.dart
@@ -9,6 +9,7 @@ enum HomeStatus {
   loading,
   loadingMore,
   refreshing,
+  acceptingCredex,
   success,
   error,
 }
@@ -24,6 +25,7 @@ class HomeState extends Equatable {
   final bool hasMoreEntries;
   final String? error;
   final int currentPage;
+  final List<String> processingCredexIds;
 
   const HomeState({
     this.status = HomeStatus.initial,
@@ -36,11 +38,13 @@ class HomeState extends Equatable {
     this.hasMoreEntries = true,
     this.error,
     this.currentPage = 0,
+    this.processingCredexIds = const [],
   });
 
   bool get isInitialLoading => status == HomeStatus.loading && combinedLedgerEntries.isEmpty;
   bool get isRefreshing => status == HomeStatus.refreshing;
   bool get isLoadingMore => status == HomeStatus.loadingMore;
+  bool get isAcceptingCredex => status == HomeStatus.acceptingCredex;
   bool get hasError => error != null;
   bool get hasPendingTransactions => pendingInTransactions.isNotEmpty || pendingOutTransactions.isNotEmpty;
 
@@ -55,6 +59,7 @@ class HomeState extends Equatable {
     bool? hasMoreEntries,
     String? error,
     int? currentPage,
+    List<String>? processingCredexIds,
   }) {
     return HomeState(
       status: status ?? this.status,
@@ -67,6 +72,7 @@ class HomeState extends Equatable {
       hasMoreEntries: hasMoreEntries ?? this.hasMoreEntries,
       error: error,  // Intentionally not using ?? to allow setting to null
       currentPage: currentPage ?? this.currentPage,
+      processingCredexIds: processingCredexIds ?? this.processingCredexIds,
     );
   }
 
@@ -82,5 +88,6 @@ class HomeState extends Equatable {
         hasMoreEntries,
         error,
         currentPage,
+        processingCredexIds,
       ];
 }
diff --git a/vimbisopay_app/lib/presentation/widgets/transactions_list.dart b/vimbisopay_app/lib/presentation/widgets/transactions_list.dart
index 0fa6f84..dea4ef9 100644
--- a/vimbisopay_app/lib/presentation/widgets/transactions_list.dart
+++ b/vimbisopay_app/lib/presentation/widgets/transactions_list.dart
@@ -45,9 +45,22 @@ class _TransactionsListState extends State<TransactionsList> {
         'Description: ${transaction.description}';
   }
 
+  void _acceptBulkTransactions(BuildContext context) {
+    context.read<HomeBloc>().add(HomeAcceptCredexBulkStarted(_selectedTransactions.toList()));
+    setState(() {
+      _selectionMode = false;
+      _selectedTransactions.clear();
+    });
+  }
+
+  void _acceptSingleTransaction(BuildContext context, String credexId) {
+    context.read<HomeBloc>().add(HomeAcceptCredexBulkStarted([credexId]));
+  }
+
   Widget _buildPendingTransactionsSection(
     List<PendingOffer> pendingIn,
     List<PendingOffer> pendingOut,
+    HomeState state,
   ) {
     if (pendingIn.isEmpty && pendingOut.isEmpty) return const SizedBox.shrink();
 
@@ -67,7 +80,7 @@ class _TransactionsListState extends State<TransactionsList> {
                   color: AppColors.textPrimary,
                 ),
               ),
-              if (pendingIn.isNotEmpty) ...[
+              if (pendingIn.isNotEmpty && state.status != HomeStatus.acceptingCredex) ...[
                 TextButton.icon(
                   onPressed: () {
                     setState(() {
@@ -91,18 +104,26 @@ class _TransactionsListState extends State<TransactionsList> {
           Padding(
             padding: const EdgeInsets.symmetric(horizontal: 16.0),
             child: ElevatedButton(
-              onPressed: () {
-                // TODO: Implement bulk confirmation
-                print('Confirming ${_selectedTransactions.length} transactions');
-              },
+              onPressed: state.status == HomeStatus.acceptingCredex
+                  ? null
+                  : () => _acceptBulkTransactions(context),
               style: ElevatedButton.styleFrom(
                 backgroundColor: AppColors.success,
                 minimumSize: const Size.fromHeight(40),
               ),
-              child: Text(
-                'Confirm ${_selectedTransactions.length} Transactions',
-                style: const TextStyle(color: Colors.white),
-              ),
+              child: state.status == HomeStatus.acceptingCredex
+                  ? const SizedBox(
+                      height: 20,
+                      width: 20,
+                      child: CircularProgressIndicator(
+                        strokeWidth: 2,
+                        valueColor: AlwaysStoppedAnimation<Color>(Colors.white),
+                      ),
+                    )
+                  : Text(
+                      'Confirm ${_selectedTransactions.length} Transactions',
+                      style: const TextStyle(color: Colors.white),
+                    ),
             ),
           ),
         if (pendingIn.isNotEmpty) ...[
@@ -117,7 +138,7 @@ class _TransactionsListState extends State<TransactionsList> {
               ),
             ),
           ),
-          ...pendingIn.map((offer) => _buildPendingTransactionTile(offer, true)),
+          ...pendingIn.map((offer) => _buildPendingTransactionTile(offer, true, state)),
         ],
         if (pendingOut.isNotEmpty) ...[
           const Padding(
@@ -131,14 +152,15 @@ class _TransactionsListState extends State<TransactionsList> {
               ),
             ),
           ),
-          ...pendingOut.map((offer) => _buildPendingTransactionTile(offer, false)),
+          ...pendingOut.map((offer) => _buildPendingTransactionTile(offer, false, state)),
         ],
       ],
     );
   }
 
-  Widget _buildPendingTransactionTile(PendingOffer offer, bool isIncoming) {
+  Widget _buildPendingTransactionTile(PendingOffer offer, bool isIncoming, HomeState state) {
     final bool isSelected = _selectedTransactions.contains(offer.credexID);
+    final bool isProcessing = state.processingCredexIds.contains(offer.credexID);
 
     return Padding(
       padding: const EdgeInsets.symmetric(horizontal: 8.0, vertical: 4.0),
@@ -146,17 +168,19 @@ class _TransactionsListState extends State<TransactionsList> {
         elevation: isSelected ? 2 : 0,
         color: isSelected ? AppColors.primary.withOpacity(0.05) : null,
         child: InkWell(
-          onTap: _selectionMode
-              ? () {
-                  setState(() {
-                    if (isSelected) {
-                      _selectedTransactions.remove(offer.credexID);
-                    } else {
-                      _selectedTransactions.add(offer.credexID);
+          onTap: (state.status == HomeStatus.acceptingCredex || isProcessing)
+              ? null
+              : _selectionMode
+                  ? () {
+                      setState(() {
+                        if (isSelected) {
+                          _selectedTransactions.remove(offer.credexID);
+                        } else {
+                          _selectedTransactions.add(offer.credexID);
+                        }
+                      });
                     }
-                  });
-                }
-              : null,
+                  : null,
           child: Padding(
             padding: const EdgeInsets.all(12.0),
             child: Row(
@@ -166,15 +190,17 @@ class _TransactionsListState extends State<TransactionsList> {
                     padding: const EdgeInsets.only(right: 8.0),
                     child: Checkbox(
                       value: isSelected,
-                      onChanged: (bool? value) {
-                        setState(() {
-                          if (value == true) {
-                            _selectedTransactions.add(offer.credexID);
-                          } else {
-                            _selectedTransactions.remove(offer.credexID);
-                          }
-                        });
-                      },
+                      onChanged: (state.status == HomeStatus.acceptingCredex || isProcessing)
+                          ? null
+                          : (bool? value) {
+                              setState(() {
+                                if (value == true) {
+                                  _selectedTransactions.add(offer.credexID);
+                                } else {
+                                  _selectedTransactions.remove(offer.credexID);
+                                }
+                              });
+                            },
                       activeColor: AppColors.primary,
                     ),
                   ),
@@ -231,22 +257,30 @@ class _TransactionsListState extends State<TransactionsList> {
                     if (!_selectionMode && isIncoming) ...[
                       const SizedBox(height: 8),
                       ElevatedButton(
-                        onPressed: () {
-                          // TODO: Implement individual confirmation
-                          print('Confirming transaction ${offer.credexID}');
-                        },
+                        onPressed: (state.status == HomeStatus.acceptingCredex || isProcessing)
+                            ? null
+                            : () => _acceptSingleTransaction(context, offer.credexID),
                         style: ElevatedButton.styleFrom(
                           backgroundColor: AppColors.success,
                           padding: const EdgeInsets.symmetric(horizontal: 12),
                           minimumSize: const Size(60, 30),
                         ),
-                        child: const Text(
-                          'Confirm',
-                          style: TextStyle(
-                            color: Colors.white,
-                            fontSize: 12,
-                          ),
-                        ),
+                        child: isProcessing
+                            ? const SizedBox(
+                                height: 15,
+                                width: 15,
+                                child: CircularProgressIndicator(
+                                  strokeWidth: 2,
+                                  valueColor: AlwaysStoppedAnimation<Color>(Colors.white),
+                                ),
+                              )
+                            : const Text(
+                                'Confirm',
+                                style: TextStyle(
+                                  color: Colors.white,
+                                  fontSize: 12,
+                                ),
+                              ),
                       ),
                     ],
                   ],
@@ -261,9 +295,18 @@ class _TransactionsListState extends State<TransactionsList> {
 
   @override
   Widget build(BuildContext context) {
-    return BlocBuilder<HomeBloc, HomeState>(
+    return BlocConsumer<HomeBloc, HomeState>(
+      listener: (context, state) {
+        if (state.status == HomeStatus.error && state.error != null) {
+          ScaffoldMessenger.of(context).showSnackBar(
+            SnackBar(
+              content: Text(state.error!),
+              backgroundColor: AppColors.error,
+            ),
+          );
+        }
+      },
       builder: (context, state) {
-        print('TransactionList state: ${state.status}');
         if (state.status == HomeStatus.initial ||
             ((state.status == HomeStatus.loading || state.status == HomeStatus.success) &&
              state.combinedLedgerEntries.isEmpty &&
@@ -279,7 +322,7 @@ class _TransactionsListState extends State<TransactionsList> {
           );
         }
 
-        if (state.error != null) {
+        if (state.error != null && !state.hasPendingTransactions) {
           return EmptyState(
             icon: Icons.cloud_off_rounded,
             message: state.error!,
@@ -337,6 +380,7 @@ class _TransactionsListState extends State<TransactionsList> {
               _buildPendingTransactionsSection(
                 state.pendingInTransactions,
                 state.pendingOutTransactions,
+                state,
               ),
               if (state.combinedLedgerEntries.isNotEmpty) ...[
                 const Padding(
-- 
2.44.0

